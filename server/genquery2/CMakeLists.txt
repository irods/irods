find_package(FLEX 2.6.1 REQUIRED)
find_package(BISON 3.0.4 REQUIRED)

set(
  IRODS_SERVER_GQ2_SOURCES
  "${CMAKE_CURRENT_SOURCE_DIR}/src/genquery2_driver.cpp"
  "${CMAKE_CURRENT_SOURCE_DIR}/src/genquery2_sql.cpp"
)

set(
  IRODS_SERVER_GQ2_HEADERS_PRIVATE
  "${CMAKE_CURRENT_SOURCE_DIR}/include/irods/private/edge_property.hpp"
  "${CMAKE_CURRENT_SOURCE_DIR}/include/irods/private/genquery2_ast_types.hpp"
  "${CMAKE_CURRENT_SOURCE_DIR}/include/irods/private/genquery2_driver.hpp"
  "${CMAKE_CURRENT_SOURCE_DIR}/include/irods/private/genquery2_scanner.hpp"
  "${CMAKE_CURRENT_SOURCE_DIR}/include/irods/private/genquery2_sql.hpp"
  "${CMAKE_CURRENT_SOURCE_DIR}/include/irods/private/genquery2_table_column_mappings.hpp"
  "${CMAKE_CURRENT_SOURCE_DIR}/include/irods/private/vertex_property.hpp"
)

set(
  IRODS_SERVER_GQ2_SOURCES_GENERATORS
  "${CMAKE_CURRENT_SOURCE_DIR}/dsl/lexer.l"
  "${CMAKE_CURRENT_SOURCE_DIR}/dsl/parser.y"
)

set_source_files_properties(
  "${IRODS_SERVER_GQ2_SOURCES_GENERATORS}"
  PROPERTIES
  HEADER_FILE_ONLY ON
)

set(IRODS_FLEX_LEXER_NAME irods_lexer)
set(IRODS_BISON_PARSER_NAME irods_parser)

# Normally, we would do this at build-time, but FLEX_TARGET and BISON_TARGET don't actually define targets,
# therefore there's no good mechanism to add a dependency to the flex and bison targets.
# The source file property OBJECT_DEPENDS is *supposed* to work for this, but doesn't.
file(MAKE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/dsl")

FLEX_TARGET(
  ${IRODS_FLEX_LEXER_NAME}
  "${CMAKE_CURRENT_SOURCE_DIR}/dsl/lexer.l"
  "${CMAKE_CURRENT_BINARY_DIR}/dsl/lexer.cpp"
)
BISON_TARGET(
  ${IRODS_BISON_PARSER_NAME}
  "${CMAKE_CURRENT_SOURCE_DIR}/dsl/parser.y"
  "${CMAKE_CURRENT_BINARY_DIR}/dsl/parser.cpp"
)
ADD_FLEX_BISON_DEPENDENCY(${IRODS_FLEX_LEXER_NAME} ${IRODS_BISON_PARSER_NAME})

set(IRODS_PARSER_NAME irods_genquery2_parser)
set(IRODS_SERVER_GQ2_FLEX_SOURCES "FLEX_${IRODS_FLEX_LEXER_NAME}_OUTPUTS")
set(IRODS_SERVER_GQ2_FLEX_HEADERS "FLEX_${IRODS_FLEX_LEXER_NAME}_OUTPUT_HEADER")
set(IRODS_SERVER_GQ2_BISON_SOURCES "BISON_${IRODS_BISON_PARSER_NAME}_OUTPUT_SOURCE")
set(IRODS_SERVER_GQ2_BISON_HEADERS "BISON_${IRODS_BISON_PARSER_NAME}_OUTPUT_HEADER")

# try to capture additional headers generated by bison
set(
  IRODS_SERVER_GQ2_HEADERS_GENERATED_EXTRA_BISON_PRIVATE
  "${CMAKE_CURRENT_BINARY_DIR}/dsl/location.hh"
  "${CMAKE_CURRENT_BINARY_DIR}/dsl/stack.hh"
  "${CMAKE_CURRENT_BINARY_DIR}/dsl/position.hh"
)
foreach(generated_header IN LISTS IRODS_SERVER_GQ2_HEADERS_GENERATED_EXTRA_BISON_PRIVATE)
  add_custom_command(
    OUTPUT "${generated_header}"
    COMMAND "${CMAKE_COMMAND}" -E touch_nocreate "${generated_header}"
    DEPENDS "${${IRODS_SERVER_GQ2_BISON_SOURCES}}"
  )
endforeach()

set(
  IRODS_SERVER_GQ2_SOURCES_GENERATED
  "${${IRODS_SERVER_GQ2_FLEX_SOURCES}}"
  "${${IRODS_SERVER_GQ2_BISON_SOURCES}}"
)
set(
  IRODS_SERVER_GQ2_HEADERS_GENERATED_PRIVATE
  "${${IRODS_SERVER_GQ2_FLEX_HEADERS}}"
  "${${IRODS_SERVER_GQ2_BISON_HEADERS}}"
)

set_source_files_properties(
  "${IRODS_SERVER_GQ2_HEADERS_GENERATED_PRIVATE}"
  "${IRODS_SERVER_GQ2_HEADERS_GENERATED_EXTRA_BISON_PRIVATE}"
  PROPERTIES
  HEADER_FILE_ONLY ON
)
set_source_files_properties(
  "${IRODS_SERVER_GQ2_SOURCES_GENERATED}"
  "${IRODS_SERVER_GQ2_HEADERS_GENERATED_PRIVATE}"
  "${IRODS_SERVER_GQ2_HEADERS_GENERATED_EXTRA_BISON_PRIVATE}"
  PROPERTIES
  GENERATED ON
)

add_library(
  ${IRODS_PARSER_NAME}
  OBJECT
  "${IRODS_SERVER_GQ2_SOURCES}"
  "${IRODS_SERVER_GQ2_HEADERS_PRIVATE}"
  "${IRODS_SERVER_GQ2_SOURCES_GENERATORS}"
  "${IRODS_SERVER_GQ2_SOURCES_GENERATED}"
  "${IRODS_SERVER_GQ2_HEADERS_GENERATED_PRIVATE}"
  "${IRODS_SERVER_GQ2_HEADERS_GENERATED_EXTRA_BISON_PRIVATE}"
)

set_target_properties(${IRODS_PARSER_NAME} PROPERTIES INTERFACE_POSITION_INDEPENDENT_CODE TRUE)
set_target_properties(${IRODS_PARSER_NAME} PROPERTIES POSITION_INDEPENDENT_CODE TRUE)

target_compile_definitions(
  ${IRODS_PARSER_NAME}
  PRIVATE
  ${IRODS_COMPILE_DEFINITIONS}
  ${IRODS_COMPILE_DEFINITIONS_PRIVATE}
  IRODS_ENABLE_SYSLOG
)

target_include_directories(
  ${IRODS_PARSER_NAME}
  PUBLIC
  "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>"
  "$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/dsl>"
  PRIVATE
  "${IRODS_EXTERNALS_FULLPATH_BOOST}/include"
)

target_link_libraries(
  ${IRODS_PARSER_NAME}
  PUBLIC
  irods_common
  nlohmann_json::nlohmann_json
  fmt::fmt
)
