set(
  IRODS_EXPERIMENTAL_API_PLUGIN_REMOVE_SOURCES
  ${CMAKE_CURRENT_SOURCE_DIR}/remove.cpp
  )

set(
  IRODS_EXPERIMENTAL_API_PLUGIN_REPLICATE_SOURCES
  ${CMAKE_CURRENT_SOURCE_DIR}/replicate.cpp
  )

set(
  IRODS_EXPERIMENTAL_API_PLUGIN_COPY_SOURCES
  ${CMAKE_CURRENT_SOURCE_DIR}/copy.cpp
  )

set(
  IRODS_EXPERIMENTAL_API_PLUGIN_REPLICATE_SOURCES
  ${CMAKE_CURRENT_SOURCE_DIR}/replicate.cpp
  )

set(
  IRODS_EXPERIMENTAL_API_PLUGINS
  copy
  remove
  replicate
  )

foreach(PLUGIN ${IRODS_EXPERIMENTAL_API_PLUGINS})
  string(TOUPPER ${PLUGIN} PLUGIN_UPPERCASE)

  add_library(
    ${PLUGIN}
    MODULE
    ${IRODS_EXPERIMENTAL_API_PLUGIN_${PLUGIN_UPPERCASE}_SOURCES}
    )

  target_include_directories(
    ${PLUGIN}
    PRIVATE
    ${IRODS_EXTERNALS_FULLPATH_ARCHIVE}/include
    ${IRODS_EXTERNALS_FULLPATH_BOOST}/include
    ${IRODS_EXTERNALS_FULLPATH_FMT}/include
    )

  target_link_libraries(
    ${PLUGIN}
    PRIVATE
    irods_server
    irods_common
    ${IRODS_EXTERNALS_FULLPATH_ARCHIVE}/lib/libarchive.so
    ${IRODS_EXTERNALS_FULLPATH_BOOST}/lib/libboost_filesystem.so
    ${IRODS_EXTERNALS_FULLPATH_BOOST}/lib/libboost_system.so
    ${IRODS_EXTERNALS_FULLPATH_FMT}/lib/libfmt.so
    ${CMAKE_DL_LIBS}
    )

  target_compile_definitions(${PLUGIN} PRIVATE ENABLE_RE ${IRODS_COMPILE_DEFINITIONS} IRODS_ENABLE_SYSLOG)
endforeach()

install(
  TARGETS
  ${IRODS_EXPERIMENTAL_API_PLUGINS}
  LIBRARY
  DESTINATION ${IRODS_PLUGINS_DIRECTORY}/experimental
  COMPONENT ${IRODS_PACKAGE_COMPONENT_SERVER_NAME}
  )
