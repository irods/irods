#
# irods.config:  iRODS configuration file.
# 	This file has important configuration settings for
# 	running iRODS.  It is used by iRODS Perl scripts.
#
#	There are two ways to make changes to this file:
#
#	1.  Use the iRODS setup scripts and answer a series of
#	    questions.  The scripts write your answers into
#	    this file.
#
#	or
#
#	2.  Edit this file yourself to set detailed options.
#	    Afterwards, run the iRODS setup scripts.  They
#	    will use your settings to build iRODS.
#
#	You can even use both ways.  Run the setup scripts and
#	answer the prompts to get an initial configuration.
#	Quit the setup scripts before building iRODS and edit
#	this file to make further adjustments.  Finally, run
#	the setup scripts again and they will use your changes.
#
#
#	Warning:  After iRODS is built, some scripts, like irodsctl,
#	use this file to control their access to the database and
#	iRODS.  If you change this file after iRODS is built, it
#	may confuse the scripts and cause problems.
# 





# Database configuration
# 	$DATABASE_TYPE is the type of database in use.  Known
# 	values are:  postgres, oracle, mysql.
#
# 	$DATABASE_ODBC_TYPE is the type of ODBC library used
# 	to connect to the database.  Known values are:  postgres,
# 	unix.
#
# 	$DATABASE_EXCLUSIVE_TO_IRODS is a boolean flag indicating
# 	if the database was installed just for iRODS (1) or if the
# 	database is also in use by other applications (0).
#
# 	$DATABASE_HOME is the full path to the installation
# 	directory of the database.  Subdirectories of this directory
# 	include the database's libraries, applications, configuration 
#       files, and data storage.
#
# 	$DATABASE_LIB the subdirectories under $DATABASE_HOME for the
#       libraries.  Sometimes for Oracle, this is something other 
#       than lib.
# 
# 	$DATABASE_HOST is the name of the host running the database
# 	server used by iRODS.  It need not be the localhost.
#
# 	$DATABASE_PORT is the port on which the database is running.
#
# 	$DATABASE_ADMIN_NAME is the name of the administrator account
# 	used by iRODS.
#
# 	$DATABASE_ADMIN_PASSWORD is the password for the administrator
# 	account used by iRODS.
#
$DATABASE_TYPE = 'postgres';
$DATABASE_ODBC_TYPE = 'unix';
$DATABASE_EXCLUSIVE_TO_IRODS = '0';
$DATABASE_HOME = 'IRODSPOSTGRESPATH';
$DATABASE_LIB = '';

$DATABASE_HOST = 'localhost';
$DATABASE_PORT = '';
$DATABASE_ADMIN_PASSWORD = 'TEMPLATE_DB_PASS';
$DATABASE_ADMIN_NAME = 'irods';





# iRODS configuration
# 	$IRODS_HOME is the full path to the installation directory of
# 	iRODS.  Subdirectories of this directory will include the iRODS
# 	applications, configuration files, servers, etc.
#
# 	$IRODS_PORT is the port on which iRODS servers are running.
#
# 	$IRODS_ADMIN_NAME is the name of the iRODS administrator account
# 	used by iRODS scripts.
#
# 	$IRODS_ADMIN_PASSWORD is the password for the iRODS administrator
# 	account used by iRODS scripts.
# 
# 	$IRODS_ICAT_HOST is the name of a remote host running an
# 	existing iRODS server that is iCAT-enabled.  This is only
# 	used if the current iRODS server is not iCAT-enabled.
#
#
#	$DB_NAME is the name of the iRODS database.
#
#	$RESOURCE_NAME is the name of the default resource for files
#	added to iRODS.
#
#	$RESOURCE_DIR is the full path to the directory containing files
#	for the default resource.
#
#	$ZONE_NAME is the iRODS top-level directory name for file paths.
#
#	$DB_KEY is a numeric key used to encrypt passwords for iRODS.
#
#  $GSI_AUTH is 1 if GSI is selected.
#  $GLOBUS_LOCATION is then the GLOBUS_LOCATION, and
#  $GSI_INSTALL_TYPE is the Globus/GSI install type to use.
#
$IRODS_HOME = '/var/lib/irods/iRODS';
$IRODS_PORT = '1247';
$SVR_PORT_RANGE_START = '20000';
$SVR_PORT_RANGE_END = '20199';
$IRODS_ADMIN_NAME = 'rods';
$IRODS_ADMIN_PASSWORD = 'rods';
$IRODS_ICAT_HOST = '';

$DB_NAME = 'ICAT';
$RESOURCE_NAME = 'demoResc';
$RESOURCE_DIR = '/var/lib/irods/iRODS/Vault';
$ZONE_NAME = 'tempZone';
$DB_KEY = '123';

$GSI_AUTH = '0';
$GLOBUS_LOCATION = '';
$GSI_INSTALL_TYPE = '';


# NCCS Audit Extensions
# $AUDIT_EXT is 1 if these Audit Extensions are selected.
# See server/icat/auditExtensions for more information.
$AUDIT_EXT = '0';


# Build configuration (optional)
#	The iRODS configuration script automatically finds the C compiler,
#	loader, archiver, and ranlib to use to build iRODS.  You can
#	override these choices by uncommenting these lines and setting
#	them to the path to the appropriate tool.
#
#	$CC is the compiler path.
#
#	$CCFLAGS are flags to add to the compiler.
#
#	$LDR is the loader path.
#
#	$LDR are flags to add to the loader.
#
#	$AR is the archiver path.
#
#	$RANLIB is the ranlib path.
#
#	$PERL is the perl path.
#
# On systems that support 64-bit addressing, the iRODS setup scripts only
# enable this if the compiler supports this option by default.  Otherwise
# you will need to add appropriate compiler and linker flags here to enable
# 64-bit addressing.
#
# For instance, on 'gcc' add '-m64' to *both* CCFLAGS and LDRFLAGS.
#
# Note, however, that the iRODS server must link with an ODBC library to
# access your database.  iRODS and that ODBC library must either both be
# 32-bit, or both be 64-bit.  If they don't match, the build will fail.
#
# Please see the documentation for your database to see how to build or
# acquire a 64-bit ODBC library.  For Postgres, you can set flags on the
# build to make it 64-bit.  iRODS does not set these flags itself.
#
#$CC = '';
#$CCFLAGS = '';
#$LDR = '';
#$LDRFLAGS = '';
#$AR = '';
#$RANLIB = '';
#$PERL = '';



return 1;
